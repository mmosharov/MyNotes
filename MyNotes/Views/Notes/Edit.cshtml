@model MyNotes.Models.NoteForView

@{
    ViewData["Title"] = "Notes page";
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">


<form asp-action="edit" asp-controller="notes" asp-antiforgery="true">

    <div class="container">

        <label class="form-label">
            Created: <mark>@Model.Note.Created</mark>
        </label>
        <label style="float:right" class="form-label">
            Id: <mark>@Model.Note.Id</mark>
        </label>

        <textarea name="Text" id="text-area" class="mb-3 form-control" style="height:300px" placeholder="Enter text">@Model.Note.Text</textarea>
        <input type="hidden" value="@Model.Note.Id" name="Id" />

        <button type="submit" class="btn btn-primary">
            <span class="fa fa-save"></span> Save
        </button>
        <button onclick="$.ajax({
                url: '@Url.Action("delete", "notes")',
                method: 'POST',
                data: { id: @Model.Note.Id },
                success: function(xml, textStatus, xhr) { window.location.replace('@Url.Action("index", "notes")') },
                error: function(xml, textStatus, xhr) { alert(xml.status); }
            });"
                class="btn btn-danger">
            <span class="fa fa-trash"></span> Delete
        </button>
        <button onclick="$('#share_modal').modal();"
                class="btn btn-info" type="button">
            <span class="fas fa-share"></span> Share
        </button>

    </div>

</form>

<div class="modal fade" id="share_modal" tabindex="-1" role="dialog" style="display: none;" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <div class="modal-header">
                <h4 class="modal-title">Share to</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>

            <div class="modal-body">
                <div id="user_share_badges" class="mb-3">

                </div>
                <select id="user_share_select" class="selectpicker" data-live-search="true">
                    <option style="display:none">Select user</option>
                    @foreach (User user in ViewBag.users)
                    {
                    <option value="@user.Id">@user.Email</option>
                    }
                    </select>
            </div>
            <div class="modal-footer">
                <button type="button" id="save_share" class="btn btn-primary">OK</button>
            </div>

        </div>
    </div>
</div>


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js"></script>
    <script>

        var sharedToUsers = JSON.parse('@Html.Raw(Json.Serialize(Model.SharedToUsers))')

        refreshUserShareBadges();

        $("#user_share_select").on("changed.bs.select",
            function (e, clickedIndex, isSelected, previousValue) {
                var email = this.options[this.selectedIndex].text;
                addSharedToUsers(this.value, email);
            });

        $("#save_share").click(function () {
            var ajax_data = {
                'noteId': @Model.Note.Id,
                'newSharedToUsers': Array.from(sharedToUsers, el => el.id)
            }
            $.ajax({
                url: '@Url.Action("SaveSharedToUsers", "Notes")',
                method: 'POST',
                data: ajax_data,
                success: function (xml, textStatus, xhr) {
                    $("#share_modal").modal('hide');
                },
                error: function (xml, textStatus, xhr) {
                    alert(`${xml.responseText} (${xml.status})`);
                }
            });
        })

        function refreshUserShareBadges() {
            $("#user_share_badges").empty();
            sharedToUsers.forEach(element =>
                $("#user_share_badges").append($(`<span class="badge badge-success mr-1">${element.email}</span>`))
            );
        }

        function addSharedToUsers(id, email) {
            var exists = sharedToUsers.find((element, index, array) => {
                return element.id == id;
            });
            if (!exists) {
                sharedToUsers.push({ 'id': id, 'email': email });
                refreshUserShareBadges();
            }
        }

    </script>
}